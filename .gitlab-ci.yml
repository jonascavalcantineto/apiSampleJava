image: maven:3.6.3-openjdk-8 

stages:
  - test
  - build
  - tag
  - deploy

code test:
  stage: test
  script:
    - mvn clean test
  only:
    - qa

build:
  stage: build
  image: docker:18.09.7
  services:
  - docker:18.09.7-dind
  script:
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD
    - docker build -t $REGISTRY_HOST/apisamplejava:$CI_COMMIT_REF_NAME .
    - docker push $REGISTRY_HOST/apisamplejava:$CI_COMMIT_REF_NAME
  only:
    - qa

tag:
  stage: tag
  image: docker:18.09.7
  services:
  - docker:18.09.7-dind
  script:
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD
    - docker pull $REGISTRY_HOST/apisamplejava:qa
    - docker tag $REGISTRY_HOST/apisamplejava:qa $REGISTRY_HOST/apisamplejava:$CI_COMMIT_REF_NAME
    - docker push $REGISTRY_HOST/apisamplejava:$CI_COMMIT_REF_NAME
  only:
    - production

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - apk add --update coreutils
    - kubectl config set-cluster k8s --server=$KUBE_URL --certificate-authority=$KUBE_CA_PEM_FILE
    - if [ $CI_COMMIT_REF_NAME == "qa" ]; then TOKEN=$kube_sa_deploy_admin_qa_token; else TOKEN=$kube_sa_deploy_admin_production_token; fi
    - kubectl config set-credentials gitlab --token=$TOKEN
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/CI_PROJECT_NAME/apisamplejava/g" deploy.yaml
    - sed -i "s/CI_COMMIT_REF_NAME/$CI_COMMIT_REF_NAME/g" deploy.yaml
    - sed -i "s/CI_COMMIT_SHORT_SHA/$CI_COMMIT_SHORT_SHA/g" deploy.yaml
    - cat deploy.yaml
    - kubectl -n $CI_COMMIT_REF_NAME apply -f deploy.yaml
  only:
    - production
    - qa